<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA General Task//EN" "http://docs.oasis-open.org/dita/v1.1/OS/dtd/task.dtd">
<task id="array_tables" xml:lang="en-US">
    <title>Task: Tables and array formulas</title>
    <shortdesc/>
    <prolog>
        <critdates>
            <created date="2020-08-31"/>
            <revised modified="2020-08-31"/>
        </critdates>
        <metadata>
            <keywords>
                <indexterm>SORT</indexterm>
                <indexterm>UNIQUE</indexterm>
            </keywords>
        </metadata>
    </prolog>
    <taskbody>
        <context>
            <p>In most cases, array formulas are used to perform actions on a list of data, often in
                multiple columns. Then it has many advantages to turn that data list into a real
                Excel table. In the array formulas you can then use the table and column name for
                the references. And the references remain healthy when rows are added or
                removed.</p>
            <note type="tip">When referring to a column name in an Excel table, put the column name
                in square brackets immediately after the table name:
                    <varname>table_name[column_name]</varname>.</note>
            <note type="other" othertype="Bestand"><filepath>Personnel.xlsx</filepath></note>
        </context>
        <steps>
            <step conref="../common/reuse_task_parts.dita#reuse_task_parts/File_Open">
                <cmd/>
            </step>
            <step>
                <cmd>Convert the data range to a table with <menucascade>
                        <uicontrol>tab Insert</uicontrol>
                        <uicontrol>Table</uicontrol>
                    </menucascade> and specify <varname>tblPersonnel</varname> as the name of the
                    table.</cmd>
            </step>
            <step>
                <cmd>Save the file with name <filepath>Personneltable.xlsx</filepath> so that
                    the original file is not modified.</cmd>
            </step>
            <step>
                <cmd>In a cell outside the data area, e.g. in cell K4, enter the following formula
                        <userinput>=UNIQUE(tblPersonnel[Department])</userinput>.</cmd>
                <stepresult>
                    <p>You will now get a list with the names of the departments.</p>
                </stepresult>
            </step>
            <stepsection>To make an alphabetically sorted list of these, you have to include this
                formula within the function SORT.</stepsection>
            <step>
                <cmd>Change the entered formula to
                        <userinput>=SORT(UNIQUE(tblPersonnel[Department]))</userinput>.</cmd>
                <stepresult>
                    <p>You will now get a sorted list with the names of the departments.</p>
                </stepresult>
            </step>
        </steps>
        <example>
            <p>Similarly, create a sorted list of division names.</p>
        </example>
    </taskbody>
</task>
