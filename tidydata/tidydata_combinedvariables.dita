<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE task PUBLIC "-//OASIS//DTD DITA General Task//EN" "generalTask.dtd">
<task id="tidydata_combinedvariables" xml:lang="en-US">
    <title>Task: Combination of variables in a column</title>
    <shortdesc/>
    <prolog>
        <critdates>
            <created date="2020-08-31"/>
            <revised modified="2020-08-31"/>
        </critdates>
    </prolog>
    <taskbody>
        <context>
            <p>Sometimes columns are a combination of several underlying variables. This is the case
                with the data set in the following table. This one is equivalent to the one in <xref
                    href="tidydata_headervalues.dita"/>. Only now there are two different classes
                (class1 and class2) and the number for each gender in each class is in its own
                column. Also in this data set, the column headings are values of variables. But
                there are two variables, <varname>gender</varname> and <varname>class</varname>,
                stored in one column.</p>
            <fig>
                <image keyref="scores2"/>
            </fig>
            <note type="other" othertype="File"><filepath>Scores2.xlsx</filepath></note>
        </context>
        <steps>
            <step conref="../common/reuse_task_parts.dita#reuse_task_parts/File_Open">
                <cmd/>
            </step>
            <step>
                <cmd>Select any cell with data and choose <menucascade>
                    <uicontrol>tab Data</uicontrol>
                    <uicontrol>From Table / Range (Get &amp; Transform Data)</uicontrol>
                </menucascade>.</cmd>
                <stepresult>
                    <p>The <wintitle>Create Table</wintitle> dialog box appears, in which the table
                        data can be specified. The data area is already filled in correctly by
                        default.</p>
                </stepresult>
            </step>
            <step>
                <cmd>Make sure the option for headers is selected and click
                    <uicontrol>OK</uicontrol>.</cmd>
                <stepresult>
                    <p>The data on the worksheet is first converted into an Excel table. Then, in a
                        new window, the Power Query Editor is started that reads the data from the
                        table.</p>
                </stepresult>
            </step>
            <step>
                <cmd>Select in Power Query editor the first column <varname>score</varname>.</cmd>
            </step>
            <step>
                <cmd>Choose <menucascade>
                    <uicontrol>tab Transform</uicontrol>
                    <uicontrol>Unpivot Columns (group Any Column)</uicontrol>
                    <uicontrol>Unpivot other Columns</uicontrol>
                </menucascade>.</cmd>
                <stepresult>Two new columns have been created. An <varname>Attribute</varname>
                    column (with the values for variable <varname>gender_class</varname>) and a
                        <varname>Value</varname> column with the numbers. And a row is created for
                    each combination of <varname>score</varname>, <varname>gender_class</varname>,
                    and <varname>number</varname>.</stepresult>
            </step>
            <step>
                <cmd>Select column <varname>Attribute</varname> and choose<menucascade>
                        <uicontrol>tab Transform</uicontrol>
                        <uicontrol>Split Column (group Text Column Tekst)</uicontrol>
                        <uicontrol>By Delimiter</uicontrol>
                    </menucascade>.</cmd>
                <stepresult>In the dialog the correct separator character to split on,
                        <codeph>_</codeph>, has already been selected.</stepresult>
            </step>
            <step>
                <cmd>Click <uicontrol>OK</uicontrol>.</cmd>
                <stepresult>Column <varname>Attribute</varname> is splitted in column
                        <varname>Attribute.1</varname> (with values for variable
                        <varname>gender</varname>) and column <varname>Attribute.2</varname> (with
                    the values for variable <varname>class</varname>).</stepresult>
            </step>
            <step>
                <cmd>Rename the columns<varname>Attribute.1</varname>,
                        <varname>Attribute.1</varname>, and <varname>Value</varname> in respectivily
                        <varname>gender</varname>, <varname>class</varname>, and
                        <varname>number</varname>.</cmd>
            </step>
            <step>
                <cmd>Choose <menucascade>
                    <uicontrol>tab Home</uicontrol>
                    <uicontrol>Close &amp; Load (group Close)</uicontrol>
                    <uicontrol>Close &amp; Load</uicontrol>
                </menucascade>.</cmd>
            </step>
        </steps>
        <result>
            <p>The result is a table with tidy data. Each column is one variable and each row is one
                observation.</p>
            <fig>
                <title>Table with tidy data of scores2</title>
                <image keyref="scores2_result">
                    <alt>Table with tidy data of scores2</alt>
                </image>
            </fig>
        </result>
    </taskbody>
</task>
